import os
import requests
import json

class VKPublisher:
    def __init__(self, vk_api_key, group_id):
        self.vk_api_key = vk_api_key
        self.group_id = group_id

    def upload_photo(self, image_path):
        if not os.path.exists(image_path):
            raise FileNotFoundError(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")

        # 1. –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        upload_url_response = requests.get(
            'https://api.vk.com/method/photos.getWallUploadServer',
            params={
                'access_token': self.vk_api_key,
                'v': '5.236',
                'group_id': self.group_id
            },
            timeout=15
        ).json()

        if 'error' in upload_url_response:
            raise Exception("‚ùå VK API error on upload server request: " + upload_url_response['error']['error_msg'])

        upload_url = upload_url_response['response']['upload_url']

        # 2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ VK
        with open(image_path, 'rb') as f:
            files = {'photo': ('image.jpg', f)}
            upload_resp = requests.post(upload_url, files=files, timeout=15)
            print("VK upload response:", upload_resp.status_code, upload_resp.text[:500])  # –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –ø–µ—Ä–µ–¥ .json()
            upload_response = upload_resp.json()

        try:
            upload_response = upload_resp.json()
        except Exception:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON. –û—Ç–≤–µ—Ç VK:")
            print("üî¢ –ö–æ–¥:", upload_resp.status_code)
            print("üßæ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:", upload_resp.text[:500])
            raise Exception("‚ö†Ô∏è VK –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")

        if 'photo' not in upload_response:
            raise Exception(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ VK: {upload_response}")

        # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –≤ –∞–ª—å–±–æ–º–µ
        save_response = requests.get(
            'https://api.vk.com/method/photos.saveWallPhoto',
            params={
                'access_token': self.vk_api_key,
                'v': '5.236',
                'group_id': self.group_id,
                'photo': upload_response['photo'],
                'server': upload_response['server'],
                'hash': upload_response['hash']
            },
            timeout=15
        ).json()

        if 'error' in save_response:
            raise Exception("‚ùå VK API error on saving photo: " + save_response['error']['error_msg'])

        photo_info = save_response['response'][0]
        return f"photo{photo_info['owner_id']}_{photo_info['id']}"
    
    def publish_post(self, content, image_path=None):
        params = {
            'access_token': self.vk_api_key,
            'from_group': 1,
            'v': '5.236',
            'owner_id': f'-{self.group_id}',
            'message': content
        }

        if image_path:
            attachment = self.upload_photo(image_path)
            params['attachments'] = attachment

        resp = requests.post('https://api.vk.com/method/wall.post', data=params, timeout=15)
        print("VK wall.post response:", resp.status_code, resp.text[:500])  # debug

        try:
            response = resp.json()
        except Exception:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON. –û—Ç–≤–µ—Ç VK:")
            print("üî¢ –ö–æ–¥:", resp.status_code)
            print("üßæ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:", resp.text[:500])
            raise Exception(f"‚ö†Ô∏è VK –Ω–µ –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ—Å—Ç–∞. –ö–æ–¥: {resp.status_code}, –æ—Ç–≤–µ—Ç: {resp.text[:500]}")

        if 'error' in response:
            raise Exception("‚ùå VK API error on wall.post: " + response['error']['error_msg'])

        return response

    def get_group_stats(self):
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã
        wall_resp = requests.get(
            'https://api.vk.com/method/wall.get',
            params={
                'access_token': self.vk_api_key,
                'v': '5.236',
                'owner_id': f'-{self.group_id}',
                'count': 10
            },
            timeout=15
        ).json()

        if 'error' in wall_resp:
            raise Exception("‚ùå VK API error on wall.get: " + wall_resp['error']['error_msg'])

        posts = wall_resp['response']['items']
        stats = {
            "–ü–æ—Å—Ç–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)": len(posts),
            "–°—É–º–º–∞—Ä–Ω–æ –ª–∞–π–∫–æ–≤": sum(p['likes']['count'] for p in posts),
            "–°—É–º–º–∞—Ä–Ω–æ —Ä–µ–ø–æ—Å—Ç–æ–≤": sum(p['reposts']['count'] for p in posts),
            "–°—É–º–º–∞—Ä–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤": sum(p['comments']['count'] for p in posts),
        }
        return stats
